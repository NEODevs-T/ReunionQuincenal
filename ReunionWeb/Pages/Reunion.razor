@page "/reunion"
@page "/reunion/{accion}/{division}/{f1}/{f2}/{tipo}"
@inject IDbDiv1Service DbDiv1Service
@inject IAPIDiv1Service APIDiv1Service
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider
@attribute [Authorize(Roles = "Admin,AdminChempro, SupIntendente, Planificador, Mantenimiento")]

<h3>Formato de Reunión</h3>


<BSContainer>

    @if (APIDiv1Service.centro.Count() == 0)
    {


        <div class="loader"></div>
    }
    else
    {
        <BSRow>
            <BSCol Column="2">
                <BSLabel>Centro</BSLabel>

                <BSInput InputType="InputType.Select" @bind-Value="Div">
                    <option value="">Seleccione</option>
                    @foreach (var d in APIDiv1Service.centro)
                    {
                    <option value="@d.Cnom">@d.Cnom</option>
                    }
            </BSInput>


        </BSCol>
        <BSCol Column="2">
            <BSLabel>División</BSLabel>
            <BSInput InputType="InputType.Select" @bind-Value="Division">
                <option value="">Seleccione</option>
                @foreach (var d in APIDiv1Service.centro)
                    {
                    @foreach (var e in d.Divisions)
                        {
                            if (Div == d.Cnom)
                            {
                            <option value="@e.Dnombre">@e.Dnombre</option>
                            }
                        }
                    }
            </BSInput>
        </BSCol>

        <BSCol ColumnSmall="1">
            <BSLabel>Código</BSLabel>
            <BSInput InputType="InputType.Select" @bind-Value="Codigo">
                <option value="Todo">Todo</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
            </BSInput>
        </BSCol>
        <BSCol ColumnSmall="2">
            <BSRow>
                <BSLabel>Aceptar</BSLabel>
            </BSRow>
            <BSButton IsOutlined Color="BSColor.Success" Size="Size.ExtraSmall" @onclick="Get"> Reunión <span class="oi oi-check"></span></BSButton>
        </BSCol>

    </BSRow>
    }

</BSContainer>

<p>

</p>

@if (DbDiv1Service.reudiatablas.Count() > 0 && dataIsLoaded == 2)
{
    <BSContainer>


        <BSTable IsResponsive="true" IsStriped="true" IsBordered="true">
            <BSTHead Class="cabecera">
                <BSTR>

                    @*<BSTD>Id</BSTD>*@
                    <BSTD>División</BSTD>
                    <BSTD>Área</BSTD>
                    <BSTD>Ksf</BSTD>
                    <BSTD>Código de Equipo</BSTD>
                    <BSTD ColSpan="4">Discrepancia</BSTD>
                    <BSTD>Código</BSTD>-+
                    <BSTD>Plan de Acción</BSTD>
                    <BSTD>Tiempo</BSTD>
                    <BSTD ColSpan="1">Responsable</BSTD>
                    <BSTD>Status</BSTD>
                    <BSTD>ODT</BSTD>
                    <BSTD>Fecha del Trabajo</BSTD>@*Fecha de listo el trabajo*@
                     @if (Rol == "Admin" | Rol == "AdminChempro" | Rol == "SupIntendente")
                                {<BSTD></BSTD>

                                }


                </BSTR>
            </BSTHead>
            <BSTBody>
                @foreach (var d in DbDiv1Service.reudiatablas)
                {
                    @if (d.Rdstatus != "Listo")
                    {
                        @if (Codigo == d.RdcodDis | Codigo == "Todo")
                        {
                            
                            
                            <BSTR>

                                @*<BSTD>@d.IdReuDia</BSTD>*@
                                <BSTD>@d.Rddiv</BSTD>
                                <BSTD>@d.Rdarea</BSTD>
                                <BSTD>@d.IdksfNavigation.KsfNombre</BSTD>
                                <BSTD>@d.RdcodEq</BSTD>
                                <BSTD ColSpan="4">@d.Rddisc.ToUpper()</BSTD>
                                <BSTD>@d.RdcodDis</BSTD>
                                    @if(@d.RdplanAcc is  not null)
                                    {
                                        <BSTD Class="textotabla listo">@d.RdplanAcc</BSTD>
                                    }
                                    else
                                    {
                                        <BSTD Class="textotabla ">@d.RdplanAcc</BSTD>
                                    }
                                <BSTD>@d.Rdtiempo</BSTD>
                                    @if (@d.IdResReuNavigation.Rrnombre == "Por Definir")
                                    {
                                        <BSTD Class="Definir">@d.IdResReuNavigation.Rrnombre </BSTD>
                                    }
                                    else
                                    {
                                        <BSTD ColSpan="1">@d.IdResReuNavigation.Rrnombre</BSTD>
                                    }

                                    @if (@d.Rdstatus == "Revisar")
                                    {
                                        <BSTD Class="cabecera">@d.Rdstatus</BSTD>
                                    }
                                    else
                                    {
                                        <BSTD Class="">@d.Rdstatus</BSTD>
                                    }
                                <BSTD>@d.Rdodt</BSTD>
                                <BSTD>@d.RdfecTra.ToString("dd/MM/yyyy") </BSTD>
                                @if (Rol == "Admin" | Rol == "AdminChempro" | Rol == "SupIntendente")
                                {
                                    <BSTD>
                                        <button class="btn btn-success" @onclick="(() => Editar(d.IdReuDia))"><i class="oi oi-pencil"></i></button>
                                    </BSTD>
                                }

                            </BSTR>
                        }
                    }
                }


            </BSTBody>

        </BSTable>
    </BSContainer>
}
else if (dataIsLoaded == 1 && DbDiv1Service.reunionditablas.Count() == 0)
{
    <p>Cargando...</p>
}
else if (dataIsLoaded == 2 && DbDiv1Service.reunionditablas.Count() == 0)
{
    <p>No hay datos para esta fecha.</p>
}

@code {

    [Parameter]
    public string? accion { get; set; }//centro
    [Parameter]
    public string? division { get; set; }//division
    [Parameter]
    public string? f1 { get; set; }
    [Parameter]
    public string? f2 { get; set; }
    [Parameter]
    public string? tipo { get; set; }


    int dataIsLoaded = 0, filtrocod = 0;
    string ayer = DateTime.Now.AddDays(-1).ToString("yyyyMMdd");
    private string Div { get; set; } //Centro
    private string Division { get; set; } //División
    private string Codigo { get; set; } = "Todo"; //Codigo
    private string Rol { get; set; } = ""; //Rol del usuario



    private List<Claim> claims { get; set; }

    private async Task CreateData()

    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        claims = Enumerable.ToList(user.Claims);

    }

    protected override async Task OnInitializedAsync()
    {
        await CreateData();
        Rol = claims[1].Value;


        if (claims[1].Value == "Admin")
        {
            await APIDiv1Service.GetCentros("All");
        }
        else
        {
            await APIDiv1Service.GetCentros(claims[6].Value.ToString());
        }
        await APIDiv1Service.Getksf();
        await APIDiv1Service.GetResReu();

    }

    protected async Task Get()
    {
        if (dataIsLoaded != 1)
        {
            dataIsLoaded = 1;
            await DbDiv1Service.GetPendientes(Div, Division, DateTime.Now.AddDays(-1), DateTime.Now,"1");
            dataIsLoaded = 2;
        }
    }
    void Editar(int id)
    {
        NavigationManager.NavigateTo($"EditDisc/{id}/1/{DateTime.Now.AddDays(-1).ToString("dd-MM-yyyy")}/{DateTime.Now.ToString("dd-MM-yyyy")}");

    }
    protected override async Task OnParametersSetAsync()
    {
        if (accion != null)
        {
            dataIsLoaded = 1;
            await DbDiv1Service.GetPendientes(accion, division, DateTime.Now.AddDays(-1), DateTime.Now,tipo);
            dataIsLoaded = 2;
        }

    }

}