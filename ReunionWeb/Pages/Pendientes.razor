@page "/pendientes"
@page "/pendientes/{accion}/{division}/{f1}/{f2}"
@inject IDbDiv1Service DbDiv1Service
@inject IAPIDiv1Service APIDiv1Service
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage


<AuthorizeView  Roles="Admin">

    <NotAuthorized>
        
    </NotAuthorized>

    <Authorized>
       
       </Authorized>
 </AuthorizeView>


<h3>Pendientes y Listos</h3>

       <BSContainer> 
            
                @if (APIDiv1Service.centro.Count()==0)
                {                     
                        <div class="loader"></div>
                }   
                else
                { 
                       <BSRow>
                                <BSCol Column="3">
                                 <BSLabel>Centro</BSLabel>
                                <BSInput InputType="InputType.Select" @bind-Value="Div">
                                    <option value="">Seleccione</option>
                                    @foreach (var d in APIDiv1Service.centro)
                                    {
                                        <option value="@d.Cnom">@d.Cnom</option>
                                    }    
                                </BSInput>                    
                                </BSCol> 
                                 
                                <BSCol Column="2" >
                                <BSLabel>División</BSLabel>
                                 <BSInput InputType="InputType.Select" @bind-Value="Division">
                                <option  value="">Seleccione</option>
                                    @foreach (var d in APIDiv1Service.centro)
                                    {
                                        @foreach (var e in d.Divisions)
                                    {
                                            if(Div== d.Cnom)
                                        {
                                                <option  value="@e.Dnombre">@e.Dnombre</option>
                                        }
                                    }
                                    }          
                                </BSInput>              
                                   </BSCol> 

                                 <BSCol Column="2">
                                     <BSLabel>Fecha Inicial</BSLabel>
                                 <BSInput InputType="InputType.Date" @bind-Value="fecha1"/>
                                 </BSCol>
            
                                 <BSCol Column="2">
                                  <BSLabel>Fecha Final</BSLabel>
                                 <BSInput InputType="InputType.Date" @bind-Value="fecha2"/>
                                 </BSCol>
            
                                <BSCol ColumnSmall="3">
                                     <BSRow><BSLabel> Buscar</BSLabel></BSRow>
                                    <BSButton IsOutlined   Color="BSColor.Warning"  Size="Size.ExtraSmall" @onclick="Get">   Pendientes y Listos  <span class="oi oi-check"></span></BSButton>
                                 </BSCol> 
                       </BSRow>
                 }

    </BSContainer> 
       
        <p></p>  


@if (DbDiv1Service.reunionditablas.Count()>0 && dataIsLoaded == 2)
{


    <BSTable IsResponsive="true" IsStriped="true" IsBordered="true">
        <BSTHead Class="cabecera">
            <BSTR>
                
                @*<BSTD>Id</BSTD>*@             
                <BSTD>Área</BSTD>
                <BSTD>Ksf</BSTD>
                <BSTD>Código de Equipo</BSTD>
                <BSTD ColSpan="4">Discrepancia</BSTD>
                <BSTD>Código</BSTD>
                <BSTD>Plan de Acción</BSTD>
                <BSTD>Tiempo</BSTD>
                <BSTD>Responsable</BSTD>
                <BSTD>Status</BSTD>
                @* <BSTD>Produfin</BSTD>*@
                  @if(claims[5].Value=="PAVECA")
                 {
                     <BSTD>SPA</BSTD>
                 }
                 else if (claims[5].Value=="")
                 {
                <BSLabel>Cargando...</BSLabel>
                }
                else
                {
                  <BSTD>ODT</BSTD>
                }
                <BSTD>Fecha de Reunión</BSTD> @*Fecha del dia de reunion*@
                @* <BSTD>FechaTrab</BSTD>*@
                @*<BSTD>Div</BSTD>*@
                @*<BSTD>Fecha BPCS</BSTD>*@
                <BSTD>Fecha del Trabajo</BSTD>@*Fecha de listo el trabajo*@
                <BSTD></BSTD>

            </BSTR>
        </BSTHead>
        <BSTBody>
            @foreach (var d in DbDiv1Service.reunionditablas)
            {
              
                    <BSTR>
                       @*<BSTD>@d.Id</BSTD>*@
                        <BSTD>@d.Area</BSTD>
                        <BSTD>@d.AfectadoKsf</BSTD>
                        <BSTD>@d.CodigoEquipo</BSTD>
                        <BSTD ColSpan="4" class="textotabla">@d.Discrepancia</BSTD>
                        <BSTD>@d.Codigo</BSTD>
                        <BSTD Class="textotabla">@d.PlanDeAccion</BSTD>
                        <BSTD>@d.Tiempo</BSTD>

                        @if (@d.Responsable == "Por Definir")
                        {
                            <BSTD Class="Definir">@d.Responsable</BSTD>
                        }
                         else
                        {
                             <BSTD>@d.Responsable</BSTD>
                        }

                        @if (@d.Status == "Listo" | d.Status == "LISTO")
                        {
                            <BSTD>@d.Status</BSTD>
                        }
                        else
                        {
                           <BSTD Class="pendiente">@d.Status</BSTD>
                        }
                        @*<BSTD>@d.Produfin</BSTD>*@
                        <BSTD>@d.OrdenTrabajo</BSTD>
                        <BSTD>@d.Fecha.ToString("dd/MM/yyyy")</BSTD>
                        @*<BSTD>@d.FechaTrab1</BSTD>*@
                        @*<BSTD>@d.Div</BSTD>*@
                        @*<BSTD>@d.Fecha2</BSTD>*@
                        <BSTD>@d.FechaTrab.ToString("dd/MM/yyyy")</BSTD>
                         <BSTD>
                         <button class="btn btn-success" @onclick="(() => Editar(d.Id))"><i class="oi oi-pencil"></i></button>
                           </BSTD>
                    </BSTR>
                
               

        }


        </BSTBody>
  
    </BSTable>
  

}
else if (dataIsLoaded==1 && DbDiv1Service.dbDiv1s.Count()==0)
{
      <div class="loader"></div>
}
else if (dataIsLoaded==2 && DbDiv1Service.dbDiv1s.Count()==0)
{
    <p>No hay datos para esta fecha.</p>
}

@code {

    [Parameter]
    public string? accion { get; set; }//centro 
    [Parameter]
     public string? division { get; set; }//division 
    [Parameter]
    public string? f1 { get; set; }
    [Parameter]
    public string? f2 { get; set; }

    int dataIsLoaded = 0;
    string ayer = DateTime.Now.AddDays(-1).ToString("yyyyMMdd");
    private string Div { get; set; } //Centro
    private string Division { get; set; } //División
    private DateTime fecha1 = DateTime.Now;
    private DateTime fecha2 = DateTime.Now;


    private List<Claim> claims { get; set; }

    private async Task CreateData()

    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        claims = Enumerable.ToList(user.Claims);

    }


    protected override async Task OnInitializedAsync()
    {

        await CreateData();

        if(claims[1].Value=="Admin")
        {
             await APIDiv1Service.GetCentros("All");  
        }
        else
        {
             await APIDiv1Service.GetCentros(claims[6].Value.ToString()); 
        }
       
        await APIDiv1Service.Getksf();
        await APIDiv1Service.GetResReu();
    }

    protected async Task Get()
    {
        if (dataIsLoaded != 1)
        {
            dataIsLoaded = 1;  
            
            await DbDiv1Service.GetPendientes(Div,Division, fecha1, fecha2);
            dataIsLoaded = 2;
        }
    }
    
  
    void Editar(int id)
    {
        NavigationManager.NavigateTo($"EditDisc/{id}/0/{fecha1.ToString("dd-MM-yyyy")}/{fecha2.ToString("dd-MM-yyyy")}");
      
    }

    protected override async Task OnParametersSetAsync()
    {
        if (accion !=null)
        {   
           
            dataIsLoaded = 1;
            await DbDiv1Service.GetPendientes(accion,division, DateTime.Parse(f1), DateTime.Parse(f2));
            dataIsLoaded = 2;
            
        }

    }


    //protected override async Task OnInitializedAsync()
    //{
    //   //   await DbDiv1Service.GetPendientes(Div);
    //}


    // private string authMessage;
    //private string surnameMessage;
    //private IEnumerable<Claim> claims = Enumerable.Empty<Claim>();

    //private async Task GetClaimsPrincipalData()
    //{
    //    var authState = await AuthStateProvider.GetAuthenticationStateAsync();
    //    var user = authState.User;

    //    if (user.Identity.IsAuthenticated)
    //    {
    //        authMessage = $"{user.Identity.Name} is authenticated.";
    //        claims = user.Claims;
    //        surnameMessage = 
    //            $"Surname: {user.FindFirst(c => c.Type == ClaimTypes.Surname)?.Value}";
                
    //    }
    //    else
    //    {
    //        authMessage = "The user is NOT authenticated.";
    //    }
    //}
      
       

    }
