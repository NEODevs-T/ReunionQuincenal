@page "/addequipo"
@inject IDbReunionService DbReunionService
@inject IAPIReunionService APIReunionService
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@attribute [Authorize(Roles = "Admin, AdminChempro")]

<h3>Códigos de Equipos </h3>
<p>

</p>


<div>
    <BSCol Column="4">

        @if (@mensaje == "Registro Exitoso")
        {
            <BSAlert Color="BSColor.Success" IsDismissible="true" HasIcon="true" @ref="Alertas._alertRef" Dismissed="Alertas.Dismissed">
                @mensaje
            </BSAlert>
        }
        else if (@mensaje == "Ya se registró este código de equipo." | mensaje == "Error al Insertar los datos, Intente de Nuevo")
        {
            <BSAlert Color="BSColor.Warning" IsDismissible="true" HasIcon="true" @ref="Alertas._alertRefWar" Dismissed="Alertas.Dismissed">
                @mensaje
            </BSAlert>
        }
        else if (@mensaje != "")
        {
            <BSAlert Color="BSColor.Warning" IsDismissible="true" HasIcon="true" @ref="Alertas._alertRefErr" Dismissed="Alertas.Dismissed">
                @mensaje
            </BSAlert>
        }

    </BSCol>
</div>

<p></p>


    @if (APIReunionService.centro.Count() == 0)
{
    <div class="loader"></div>

}
else
{
    if (tipo == 1)
    {
        <BSInputRadio CheckedValue="@(0)" @bind-Value="tipo" IsToggle="true" Size="Size.ExtraSmall" Color="BSColor.Success" IsOutlined="true">
            Volver
            <span class="oi oi-arrow-circle-left"></span>
        </BSInputRadio>
        <p></p>
        <p></p>
        <div class="contenedor">
            <BSForm Model="EquipoForm" Class="boxhome" IsRow="true" Gutters="Gutters.Medium" OnSubmit="SaveEquipo" OnReset="Reset">
                <DataAnnotationsValidator />
                <BSCol ColumnMedium="12">
                    @_message
                    <BSValidationSummary />
                </BSCol>
                <BSRow>
                    <BSCol Column="4" ColumnSmall="2">
                        <BSLabel>Centro</BSLabel>
                        <BSInput InputType="InputType.Select" @bind-Value="Centro" >
                            <option value="">Seleccione</option>
                            @foreach (var d in APIReunionService.centro)
                            {
                                <option value="@d.IdCentro">@d.Cnom</option>
                            }
                        </BSInput>
                        <BSFeedback For="@(() =>Centro)" ValidMessage="Correcto." />
                    </BSCol>

                    <BSCol Column="4" ColumnSmall="2">
                        <BSLabel>División</BSLabel>
                        <BSInput InputType="InputType.Select" @bind-Value="Division">
                            <option value="">Seleccione</option>
                            @foreach (var d in APIReunionService.centro)
                            {
                               @foreach (var e in d.Divisions.Where(di=>di.IdCentro==Centro))
                                {                        
                                    <option value="@e.IdDivision">@e.Dnombre</option>                           
                                }
                            }
                        </BSInput>
                        <BSFeedback For="@(() =>Division)" ValidMessage="Correcto." />
                    </BSCol>


                    <BSCol Column="4">
                        <BSLabel>Línea</BSLabel>
                        <BSInput InputType="InputType.Select" @bind-Value="Linea">
                            <option value="">Seleccione...</option>
                            @foreach (var d in APIReunionService.centro)
                            {
                                @foreach (var e in d.Lineas.Where(li=>li.IdDivision==Division && li.IdDivisionNavigation.IdCentro==Centro))
                                {                        
                                    <option value="@e.IdLinea">@e.Lnom</option>                         
                                }
                            }
                        </BSInput>
                        <BSFeedback For="@(() =>Linea)" ValidMessage="Correcto." />

                    </BSCol>
                </BSRow>



                <p></p>
                <BSRow>
                    <BSCol Column="3">
                        <BSLabel>Código Eam</BSLabel>
                        <BSInput InputType="InputType.Text" @bind-Value="EquipoForm.EcodEquiEam" />
                        <BSFeedback For="@(() => EquipoForm.EcodEquiEam)" ValidMessage="Correcto." />
                    </BSCol>
                </BSRow>
                <p></p>
                <BSRow>
                    <BSCol Column="4">
                        <BSLabel>Nombre del Equipo</BSLabel>
                        <BSInput InputType="InputType.Text" @bind-Value="EquipoForm.EnombreEam" />
                        <BSFeedback For="@(() => EquipoForm.EnombreEam)" ValidMessage="Correcto." />
                    </BSCol>
                    <BSRow>
                        <BSCol Column="6">
                            <BSLabel>Descripción</BSLabel>
                            <BSInput InputType="InputType.TextArea" @bind-Value="EquipoForm.EdescriEam" />
                        </BSCol>
                    </BSRow>
                    <p></p>
                </BSRow>
                <BSCol Column="12">
                    <BSButton Color="BSColor.Success" Size="Size.ExtraSmall" IsSubmit >  Guardar Equipo <span class="oi oi-check"></span></BSButton>

                <BSButton Color="BSColor.Primary" Size="Size.ExtraSmall" IsReset >  Nuevo</BSButton>

            </BSCol>
        </BSForm>
    </div>
    }
    else if (tipo == 2)
    {
        <BSInputRadio CheckedValue="@(0)" @bind-Value="tipo" IsToggle="true" Size="Size.ExtraSmall" Color="BSColor.Success" IsOutlined="true">
            Volver
            <span class="oi oi-arrow-circle-left"></span>
        </BSInputRadio>
        <p></p>
        <p></p>
        <BSRow>
            <BSCol Column="3">
                <BSLabel>Centro</BSLabel>
                <BSInput InputType="InputType.Select" @bind-Value="Centro" >
                    <option value="">Seleccione</option>
                    @foreach (var d in APIReunionService.centro)
                    {
                        <option value="@d.IdCentro">@d.Cnom</option>
                    }
                </BSInput>
                <BSFeedback For="@(() =>Centro)" ValidMessage="Correcto." />
            </BSCol>

            <BSCol Column="3" >
                <BSLabel>División</BSLabel>
                <BSInput InputType="InputType.Select" @bind-Value="Division" >
                    <option value="">Seleccione</option>
                  
                    {
                    @foreach (var d in APIReunionService.centro)
                    {
                        @foreach (var e in d.Divisions.Where(di=>di.IdCentro==Centro))
                        {                        
                              <option value="@e.IdDivision">@e.Dnombre</option>                           
                        }
                    }
                    
                </BSInput>
                <BSFeedback For="@(() =>Division)" ValidMessage="Correcto." />
            </BSCol>


            <BSCol Column="3">
                <BSLabel>Línea</BSLabel>
                <BSInput InputType="InputType.Select" @bind-Value="Linea">
                    <option value="">Seleccione...</option>
                    @foreach (var d in APIReunionService.centro)
                    {
                        @foreach (var e in d.Lineas.Where(li=>li.IdDivision==Division && li.IdDivisionNavigation.IdCentro==Centro))
                        {                        
                                <option value="@e.IdLinea">@e.Lnom</option>                         
                        }
                    }
                </BSInput>
                <BSFeedback For="@(() =>Linea)" ValidMessage="Correcto." />

            </BSCol Colum="3">
            <BSCol>
                 <BSRow>
                 <BSLabel>Buscar</BSLabel>
                 </BSRow>
                <button onclick="@Get" class="btn btn-success"><i class="oi oi-magnifying-glass"></i></button>
            </BSCol>
            </BSRow>
            <p></p>
            <p></p>
      

        @if (APIReunionService.equiposlinea.Count() > 0 && dataIsLoaded == 2)
        {
                 
              <BSCol Column="3">
                <BSLabel>Filtrar Código</BSLabel>
                <BSInput InputType="InputType.Text" @bind-Value="EquipoFiltro" >
                   
                   
                </BSInput>

            </BSCol Colum="3">
        
        <p></p>
            <BSContainer>


                <BSTable IsResponsive="true" IsStriped="true" IsBordered="true">
                    <BSTHead Class="cabecera">
                        <BSTR>

                            @*<BSTD>Id</BSTD>*@
                            <BSTD>Centro</BSTD>
                            <BSTD>División</BSTD>
                            <BSTD>Línea</BSTD>
                            <BSTD>Nombre</BSTD>
                            <BSTD>Código</BSTD>
                            <BSTD>Descripcion</BSTD>
                            <BSTD>Estado</BSTD>
                            <BSTD>Editar</BSTD>



                        </BSTR>
                    </BSTHead>
                    <BSTBody>
                        
                            @if (EquipoFiltro.Length>2)
                            {

                                
                                    @if(APIReunionService.equiposlinea.Where(a => a.EcodEquiEam.Contains(EquipoFiltro)).Count()==0)
                                    {
                                        <p>No hay registros.</p>
                                    }
                                    else
                                    {
                                         @foreach (var d in  APIReunionService.equiposlinea.Where(a => a.EcodEquiEam.Contains(EquipoFiltro)).ToList())
                                        {
                                            <BSTR>
                                            @*<BSTD>@d.IdEquipo</BSTD>*@
                                            <BSTD>@d.IdLineaNavigation.IdDivisionNavigation.IdCentroNavigation.Cnom</BSTD>
                                            <BSTD>@d.IdLineaNavigation.IdDivisionNavigation.Dnombre</BSTD>
                                            <BSTD>@d.IdLineaNavigation.Lnom</BSTD>
                                            
                                            @if(idequipoeditar==d.IdEquipo)
                                            {
                                                <BSTD>
                                                    
                                                      <BSInput InputType="InputType.Text" @bind-Value="d.EnombreEam" />
                                                      <BSFeedback For="@(() => d.EnombreEam)" ValidMessage="Correcto." />

                                                </BSTD> 
                                                
                                                <BSTD>
                                                    
                                                      <BSInput InputType="InputType.Text" @bind-Value="d.EcodEquiEam" />
                                                      <BSFeedback For="@(() => d.EcodEquiEam)" ValidMessage="Correcto." />

                                                </BSTD>  

                                                <BSTD>
                                                    
                                                      <BSInput InputType="InputType.Text" @bind-Value="d.EdescriEam" />
                                                      <BSFeedback For="@(() => d.EdescriEam)" ValidMessage="Correcto." />

                                                </BSTD>

                                                <BSTD>
                                                    
                                                      <BSInput InputType="InputType.Select" @bind-Value="d.EestaEam">
                                                            <option value="true">Activar</option>  
                                                            <option value="false">Desactivar</option> 
                                                       </BSInput>
                                                      <BSFeedback For="@(() => d.EestaEam)" ValidMessage="Correcto." />

                                                </BSTD>
                                                <BSTD>                                                                            
                                                 <BSButton Color="BSColor.Primary" IsOutlined @onclick="(() => Editar(d))" Target="History"><i class="oi oi-circle-check"></i></BSButton>
                                                    <BSButton Color="BSColor.Danger" IsOutlined @onclick="Cancelar" Target="History"><i class="oi oi-circle-x"></i></BSButton>

                                             </BSTD>
                                        
                                            }
                                             else
                                            {
                                                <BSTD>
                                                    @d.EnombreEam                                    
                                                </BSTD>
                                            
                                        
                                            <BSTD>
                                                    @d.EcodEquiEam
                                            </BSTD>
                                            <BSTD>
                                                    @d.EdescriEam
                                            </BSTD>
                                            <BSTD>
                                                @if(d.EestaEam==true)
                                                {
                                                    <p>Activo</p>
                                                }
                                                else
                                                {
                                                    <p>Inactivo</p>
                                                }
                                            </BSTD>
                                            
                                            <BSTD>                                               
                                                 <BSButton Color="BSColor.Success" IsOutlined @onclick="(() => Habilitar(d.IdEquipo))" Target="History"><i class="oi oi-pencil"></i></BSButton>
                                            </BSTD>
                                            }
                                            </BSTR> 
                                        }
                                     }
                              }
                            
                            
                            else               
                            {
                                @foreach (var d in APIReunionService.equiposlinea)
                                {
                                  <BSTR>
                       @*         <BSTD>@d.IdEquipo</BSTD>*@
                                <BSTD>@d.IdLineaNavigation.IdDivisionNavigation.IdCentroNavigation.Cnom</BSTD>
                                <BSTD>@d.IdLineaNavigation.IdDivisionNavigation.Dnombre</BSTD>
                                <BSTD>@d.IdLineaNavigation.Lnom</BSTD>
                                                                            @if(idequipoeditar==d.IdEquipo)
                                            {
                                                <BSTD>
                                                    
                                                      <BSInput InputType="InputType.Text" @bind-Value="d.EnombreEam" />
                                                      <BSFeedback For="@(() => d.EnombreEam)" ValidMessage="Correcto." />

                                                </BSTD> 
                                                
                                                <BSTD>
                                                    
                                                      <BSInput InputType="InputType.Text" @bind-Value="d.EcodEquiEam" />
                                                      <BSFeedback For="@(() => d.EcodEquiEam)" ValidMessage="Correcto." />

                                                </BSTD>  

                                                <BSTD>
                                                    
                                                      <BSInput InputType="InputType.Text" @bind-Value="d.EdescriEam" />
                                                      <BSFeedback For="@(() => d.EdescriEam)" ValidMessage="Correcto." />

                                                </BSTD>

                                                <BSTD>
                                                    
                                                      <BSInput InputType="InputType.Select" @bind-Value="d.EestaEam">
                                                            <option value="true">Activar</option>  
                                                            <option value="false">Desactivar</option> 
                                                       </BSInput>
                                                      <BSFeedback For="@(() => d.EestaEam)" ValidMessage="Correcto." />

                                                </BSTD>
                                                <BSTD>                                                                            
                                                 <BSButton Color="BSColor.Primary" IsOutlined @onclick="(() => Editar(d))" Target="History"><i class="oi oi-circle-check"></i></BSButton>
                                                 <BSButton Color="BSColor.Danger" IsOutlined @onclick="Cancelar" Target="History"><i class="oi oi-circle-x"></i></BSButton>
                                            </BSTD>
                                        
                                            }
                                             else
                                            {
                                                <BSTD>
                                                    @d.EnombreEam                                    
                                                </BSTD>
                                            
                                        
                                            <BSTD>
                                                    @d.EcodEquiEam
                                            </BSTD>
                                            <BSTD>
                                                    @d.EdescriEam
                                            </BSTD>
                                            <BSTD>
                                                @if(d.EestaEam==true)
                                                {
                                                    <p>Activo</p>
                                                }
                                                else
                                                {
                                                    <p>Inactivo</p>
                                                }
                                            </BSTD>
                                            
                                            <BSTD>                                               
                                                 <BSButton Color="BSColor.Success" IsOutlined @onclick="(() => Habilitar(d.IdEquipo))" Target="History"><i class="oi oi-pencil"></i></BSButton>
                                            </BSTD>
                                            }
                                            </BSTR> 
                            
                            }
                        }

                    </BSTBody>

                </BSTable>
            </BSContainer>
        }
        else if (dataIsLoaded == 1 && APIReunionService.equiposlinea.Count() == 0)
        {
            <div class="loader"></div>
        }
        else if (dataIsLoaded == 2 && APIReunionService.equiposlinea.Count() == 0)
        {
            <p>No hay equipos.</p>
        }

    }
    else
    {
        <BSInputRadio CheckedValue="@(1)" @bind-Value="tipo" IsToggle="true" Size="Size.ExtraSmall" Color="BSColor.Success" IsOutlined="true">
            Ageregar Equipos
            <span class="oi oi-plus"></span>
        </BSInputRadio>
        <BSInputRadio @bind-Value="tipo" CheckedValue="@(2)" IsToggle="true" Size="Size.ExtraSmall" Color="BSColor.Success" IsOutlined="true">
            Consultar Equipos
            <span class="oi oi-magnifying-glass"></span>
        </BSInputRadio>
    }
}



@code {
    [Required(ErrorMessage = "Seleccione el Centro.")]
    private int Centro { get; set; } //para cargar los datos del trazabilidad
    [Required(ErrorMessage = "Seleccione la división.")]
    private int Division { get; set; }
    [Required(ErrorMessage = "Seleccione la Línea.")]
    private int Linea { get; set; }
    private string EquipoFiltro { get; set; } = "";
    private int tipo { get; set; } = 0;
    private int idequipoeditar { get; set; } = 0;//id para mostar los campos de edicion 
    private string mensaje = "", result = "";//resultado del save;

    int dataIsLoaded = 0;
    string _message;
    Alerts Alertas = new Alerts();

    EquipoDTO EquipoForm = new EquipoDTO();
    List<EquipoEam> EquipoLista = new List<EquipoEam>();
    private List<Claim> claims { get; set; }

    private async Task CreateData()

    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        claims = Enumerable.ToList(user.Claims);

    }
    protected async Task Get()
    {
        tipo = 2;
        if (dataIsLoaded != 1)
        {
            dataIsLoaded = 1;
            await APIReunionService.GetEquiposxlinea(Linea.ToString());
            dataIsLoaded = 2;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await CreateData();
        await APIReunionService.GetCentrosxEmpresa("All" + claims[10].Value);
    }
    protected async Task SaveEquipo(EditContext e)
    {
        if (e.Validate())
        {

            try
            {
                EquipoForm.IdLinea = Linea;
                EquipoForm.EestaEam = true;
                EquipoForm.EcodEquiEam = EquipoForm.EcodEquiEam.Replace(" ", String.Empty);
                mensaje = await APIReunionService.PostEquipo(EquipoForm);
                Reset();
                Alertas.Show();

            }
            catch (Exception ex)
            {

                mensaje = "Error al Insertar los datos, Intente de Nuevo";
                Alertas.Show();
            }
        }
    }

    async Task Habilitar(int id)
    {
        idequipoeditar = id;
    }
     async Task Cancelar()
    {
        idequipoeditar = 0;
    }
    async Task Editar(EquipoEam equipo)
    {
        try
        {
            EquipoDTO eq = new EquipoDTO();
            eq.IdEquipo = equipo.IdEquipo;
            eq.IdLinea = equipo.IdLinea;
            eq.EcodEquiEam = equipo.EcodEquiEam;
            eq.EdescriEam = equipo.EdescriEam;
            eq.EestaEam = equipo.EestaEam;
            eq.EnombreEam = equipo.EnombreEam;

            mensaje = await APIReunionService.PostEquipo(eq);
            Alertas.Show();
            idequipoeditar = 0;
        }
        catch (Exception ex)
        {
             mensaje = "Error al Insertar los datos, Intente de Nuevo";
             Alertas.Show();
        }

    }
    

    protected async Task Reset()
    {
        EquipoForm = new EquipoDTO();
        Centro = 0;
    }
}
